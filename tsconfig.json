// Documentation of all possible options: https://www.typescriptlang.org/tsconfig
// Documentation of modules (=> understand options): https://www.typescriptlang.org/docs/handbook/modules/theory.html
// NB: Some of these options will not be necessary for most projects using my starter project. Adding them anyway so as
//     to be able to refer to this file as some documentation (of options understood) for later.
{
  "compilerOptions": {
    // ---------------------------------------------------------------------------------------------------------------
    // ------------------------------------------ Language and Environment -------------------------------------------
    // ---------------------------------------------------------------------------------------------------------------
    // ðŸ‘‡ Recommended by the doc: ES6 is supported by all modern browsers
    "target": "es6",
    // ðŸ‘‡ Adds additional APIs
    "lib": [
      // ðŸ‘‡ Adds DOM definitions (window, document, etc.)
      "dom",
      // ðŸ‘‡ Adds additional APIs available in ESNext
      "esnext"
    ],
    // ---------------------------------------------------------------------------------------------------------------
    // --------------------------------------------------- Modules ---------------------------------------------------
    // ---------------------------------------------------------------------------------------------------------------
    // ðŸ‘‡ Recommended by doc: moving target reflecting the latest Node.js versions as Node.jsâ€™s module system evolves.
    "module": "nodenext",
    // ðŸ‘‡ Already implied with the module "nodenext" set above
    "moduleResolution": "nodenext",
    // ðŸ‘‡ Allows importing modules with a JSON extension
    "resolveJsonModule": true,
    // ðŸ‘‡ Already by default: the longest common path of all non-declaration input files
    "rootDir": "./src",
    // ---------------------------------------------------------------------------------------------------------------
    // ---------------------------------------------------- Emit -----------------------------------------------------
    // ---------------------------------------------------------------------------------------------------------------
    // ðŸ‘‡ Generates ".d.ts" files for every TypeScript or JavaScript file inside your project
    "declaration": true,
    // ðŸ‘‡ Generates a source map for ".d.ts" files which map back to the original ".ts" source file
    //    --> Allows to go to the original ".ts" file when using features like "Go to Definition"
    "declarationMap": true,
    // ðŸ‘‡ Where emitted ".js", ".d.ts" files are emitted (default: current directory)
    "outDir": "dist",
    // ---------------------------------------------------------------------------------------------------------------
    // --------------------------------------------- Interop constraints ---------------------------------------------
    // ---------------------------------------------------------------------------------------------------------------
    // ðŸ‘‡ Fixes some problems in the code transpiled by TypeScript (linked to CommonJS being treated as ES6 modules)
    //    NB: Also sets "allowSyntheticDefaultImports" to true
    "esModuleInterop": true,
    // ---------------------------------------------------------------------------------------------------------------
    // ------------------------------------------------ Type Checking ------------------------------------------------
    // ---------------------------------------------------------------------------------------------------------------
    // ðŸ‘‡ Turns on all "strict mode family options" (strictFunctionTypes, strictNullChecks, noImplicitAny...)
    "strict": true,
    // ðŸ‘‡ To enforce having no unused variable
    "noUnusedLocals": true,
    // ðŸ‘‡ To enforce having no implicit "any" (i.e. forces to define a type)
    "noImplicitAny": true,
    // ðŸ‘‡ To enforce having no unused parameters in a function
    "noUnusedParameters": true
  },
  "exclude": ["node_modules", "dist"]
}
